<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.bus.dao.ScheduleManageDAO">

	<!-- 정규 휴무가 정해지지 않은, 노선은 배정된 기사님 뽑기 -->
	<select id="getUndecideReguloffMember" resultType="kr.or.bus.dto.MemberJoinRegulOffDTO">
		select
		mem.M_ID, mem.M_NAME, rou.R_NUM
		from member mem
		join bus bu
		on
		mem.B_VEHICLENUM = bu.B_VEHICLENUM
		join route rou
		on rou.R_NUM =
		bu.R_NUM
		where mem.M_ID not in (select m_id from reguloff) and
		rou.r_num = #{r_num}
	</select>

	<!-- 노선값 불러오기 -->
	<select id="getTotalRoute" resultType="kr.or.bus.dto.RouteJoinGarageDTO">
		select rou.r_num,
		rou.G_NUM, gar.G_NAME
		from route rou
		join garage gar
		on gar.g_num = rou.g_num
		where rou.g_num = #{g_num}
	</select>

	<!-- 차고지 값 불러오기 -->
	<select id="getTotalGarage" resultType="kr.or.bus.dto.GarageDTO">
		select g_num, g_name,
		g_x, g_y, g_addr, g_space, g_currentpark from garage
	</select>
	
	
	<!-- history -->
	<select id="history_select" resultType="kr.or.bus.dto.RegulOffrJoinDTO">
		select 
		r.ko_code,
		r.m_id,
		r.o_code,
		r.ro_code,
		r.ro_reqdate,
		r.ro_regdate,
		r.ro_object,
		
		k.ko_name,
		o.o_date as bd,
		mo.o_date as ad,
		m.m_name as bn,
		me.m_name as an
		
		from reguloffr r
		join member m on r.m_id=m.m_id
		join koff k on r.ko_code=k.ko_code
		join moff o on r.o_code=o.o_code
	    join moff mo on r.ro_code=mo.o_code
	    join member me on r.ro_object=me.m_id
	</select>
	<update id="history_agree" parameterType="map">
		update reguloffr
		set ko_code='601',
		o_check='Y',
		ro_regdate=sysdate
		where m_id=#{m_id} and ro_object=#{ro_object}
	</update>
	
	<!-- timetable -->
	<select id="selectdistinct" resultType="kr.or.bus.dto.SelectDistinctDTO">
		select distinct m.m_name, b.r_num, m.b_vehiclenum, o.o_date from member m
		join bus b on m.b_vehiclenum=b.b_vehiclenum
		join oschedule o on m.b_vehiclenum=o.b_vehiclenum
	</select>
	<select id="selecttime" resultType="String">
		select o_time from oschedule
		where o_date=#{o_date} and b_vehiclenum=#{b_vehiclenum}
	</select>
	
	<!-- vschedule -->
	<insert id="copy_vschedule">
		INSERT INTO oschedule SELECT * FROM vschedule
	</insert>
	<delete id="delete_vschedule">
		delete * from vschedule
	</delete>
	
	<!-- 정기휴무가 정해진 노선이 배정된 기사님 뽑기 -->
	<select id="getDecideReguloffMember"
		resultType="kr.or.bus.dto.MemberJoinReguloffJoinMoffJoinBusJoinRouteJoinDTO">
		select rego.M_ID, mem.m_name, mo.O_DATE, mo.o_code
		from member mem
		join reguloff rego
		on rego.M_ID = mem.M_ID
		join moff mo
		on mo.O_CODE = rego.O_CODE
		join bus bu
		on mem.B_VEHICLENUM = bu.B_VEHICLENUM
		join route rou
		on rou.R_NUM = bu.R_NUM
		where rou.r_num = #{r_num}
	</select>
	
	<select id="getOcode" resultType="String">
		select o_code from moff where o_date = #{o_date}
	</select>
	
	<insert id="insertReguloff" parameterType="String">
		insert into reguloff(m_id, o_code, ro_regdate) values(#{param1},#{param2},sysdate)
	</insert>
	
	<update id="updateReguloff">
		update reguloff set o_code = #{param2} where m_id = #{param1}
	</update>
	

	<!-- 최종예상스케줄에 관련된 데이터 불러오기 -->

	<select id="getmemberjoinreg" parameterType="String" resultType="kr.or.bus.dto.MemberJoinBusJoinRouteJoinReguloffDTO">

    	  select  mem.m_id, mem.m_name, reg.o_code, bus.b_vehiclenum, bus.r_num, rou.r_start,rou.r_last,rou.r_interval ,bus.b_order
      	 from member mem join reguloff reg on mem.m_id=reg.m_id
    	 join bus bus on bus.b_vehiclenum=mem.b_vehiclenum
      	 join route rou on rou.r_num= bus.r_num
         where bus.r_num= #{r_num}
          order by bus.b_order
	</select>

	
	<select id="getrnum" resultType="kr.or.bus.dto.RouteDTO">
	select r_num from route 
	</select>
	
	<select id="" resultType="kr.or.bus.dto.RouteDTO2">
	select ro.r_start, ro.r_last, ro.r_interval, ro.r_num
	from route ro join bus bu on ro.r_num= bu.r_num
	</select>
	

	<!-- 휴무 요청 상태 관리 -->
	<select id="getRequestNum" resultType="Integer">
	select count(*)
	from reguloffr rego
	join member mem
	on mem.m_id = rego.m_id
	join bus bu
	on bu.B_VEHICLENUM = mem.B_VEHICLENUM
	join member mem1
	on mem1.m_id = rego.ro_object
	join koff ko
	on ko.ko_code = rego.ko_code
	join moff mo
	on mo.o_code = rego.o_code
	join moff mo1
	on mo1.o_code = rego.ro_code
	where ko.ko_code = '600' and rego.o_check='y'
	</select>
	
	<select id="getRequestRefuseNum" resultType="Integer">
	select count(*)
	from reguloffr rego
	join member mem
	on mem.m_id = rego.m_id
	join bus bu
	on bu.B_VEHICLENUM = mem.B_VEHICLENUM
	join member mem1
	on mem1.m_id = rego.ro_object
	join koff ko
	on ko.ko_code = rego.ko_code
	join moff mo
	on mo.o_code = rego.o_code
	join moff mo1
	on mo1.o_code = rego.ro_code
	where ko.ko_code = '602' and rego.o_check='y'
	</select>
	
	<select id="getRequestMember" resultType="kr.or.bus.dto.MemberJoinRegulOffrJoinBusJoinMoffJoinKoffDTO">
	select ko.KO_NAME, rego.M_ID,mem.M_NAME, mo.O_DATE, mo1.O_DATE,
	rego.RO_REQDATE , rego.RO_REGDATE,mem1.M_ID, mem1.M_NAME,bu.R_NUM
	from reguloffr rego
	join member mem
	on mem.m_id = rego.m_id
	join bus bu
	on bu.B_VEHICLENUM = mem.B_VEHICLENUM
	join member mem1
	on mem1.m_id = rego.ro_object
	join koff ko
	on ko.ko_code = rego.ko_code
	join moff mo
	on mo.o_code = rego.o_code
	join moff mo1
	on mo1.o_code = rego.ro_code
	where ko.ko_code = '600' and rego.o_check='y'
	</select>
	
	<select id="getRequestInfoCal" resultType="kr.or.bus.dto.MemberJoinReguloffJoinMoffJoinBusJoinRouteJoinDTO">
	select bu.R_NUM, mem.M_NAME, rego.M_ID, mo.O_DATE, rego.o_code, rego.TEMP
	from member mem
	join bus bu on mem.b_vehiclenum = bu.b_vehiclenum
	join reguloff rego on mem.m_id = rego.m_id
	join moff mo on mo.O_CODE = rego.O_CODE
	where bu.r_num = #{r_num}
	</select>
	
	<select id="getMemberTempTrue" resultType="kr.or.bus.dto.MemberJoinRegulOffrJoinBusJoinMoffJoinKoffDTO2">
	select ko.KO_NAME, rego.M_ID,mem.M_NAME, mo.O_DATE,mo.O_CODE, mo1.O_DATE as o_date_1, mo1.O_CODE as o_code_1,
	rego.RO_REQDATE , rego.RO_REGDATE,mem1.M_ID as m_id_1, mem1.M_NAME as m_name_1,bu.R_NUM
	from reguloffr rego 
	join member mem on mem.m_id = rego.m_id
	join bus bu on bu.B_VEHICLENUM = mem.B_VEHICLENUM
	join member mem1 on mem1.m_id = rego.ro_object
	join koff ko on ko.ko_code = rego.ko_code
	join moff mo on mo.o_code = rego.o_code
	join moff mo1 on mo1.o_code = rego.ro_code
	where rego.M_ID in 
	(select mem.M_ID 
	from member mem join bus bu on bu.B_VEHICLENUM = mem.B_VEHICLENUM
	join reguloff reg on reg.M_ID = mem.M_ID
	where reg.TEMP = 't' or reg.TEMP = 's' and bu.R_NUM = #{r_num}) and ko.ko_code = '600' and
	rego.o_check='y'
	</select>
	
	<update id="updateFirstRegister" parameterType="String">
		update reguloff set o_code = #{param2}, ro_regdate = sysdate, temp = null where m_id = #{param1}
	</update>
	
	<update id="updateFirstRegisterRecord" parameterType="String">
		update reguloffr set ko_code = '601', ro_regdate = sysdate, alarm = 'o' where m_id = #{m_id} and ko_code = '600'
	</update>
	
	<update id="refuseFirstRegister" parameterType="String">
		update reguloff set o_code = #{param2}, ro_regdate = sysdate, temp = null where m_id = #{param1}
	</update>
	
	<update id="refuseFirstRegisterRecord" parameterType="String">
		update reguloffr set ko_code = '602', ro_regdate = sysdate, alarm = 'x' where m_id = #{m_id} and ko_code = '600'
	</update>
	
	<delete id="refuseSameDelete">
		delete from reguloff where m_id = #{m_id}
	</delete>
	
	<update id="updateBtwReqRegr">
		update reguloffr set ko_code = '601', ro_regdate = sysdate, alarm = 'o' where m_id = #{param1} and ko_code = '600'
	</update>
	
	<update id="updateBtwReqRego">
		update reguloff set o_code = #{param2}, ro_regdate = sysdate, temp = null where m_id = #{param1}
	</update>
	
	<update id="updateBtwByRegr">
		update reguloffr set ko_code = '601', ro_regdate= sysdate, alarm = 'o' where m_id = #{param1} and ko_code = '600'
	</update>
	
	<update id="updateBtwByRego">
		update reguloff set o_code = #{param2}, ro_regdate = sysdate, temp = null where m_id = #{param1}
	</update>
	
	<update id="updateBtwReqRegrre">
		update reguloffr set ko_code = '602', ro_regdate = sysdate, alarm = 'o' where m_id = #{param1} and ko_code = '600'
	</update>
	
	<update id="updateBtwReqRegore">
		update reguloff set o_code = #{param2}, ro_regdate = sysdate, temp = null where m_id = #{param1}
	</update>
	
	<update id="updateBtwByRegrre">
		update reguloffr set ko_code = '602', ro_regdate= sysdate, alarm = 'x' where m_id = #{param1} and ko_code = '600'
	</update>
	
	<update id="updateBtwByRegore">
		update reguloff set o_code = #{param2}, ro_regdate = sysdate, temp = null where m_id = #{param1}
	</update>
	
	<!-- 휴무 요청 상태 관리 끝 -->

</mapper>